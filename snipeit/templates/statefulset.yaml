---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "snipeit.fullname" . }}
  labels:
    {{- include "snipeit.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "snipeit.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "snipeit.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
    {{- if eq .Values.updateStrategy "RollingUpdate" }}
    rollingUpdate:
      partition: 0
    {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snipeit.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: set-session-permission
          image: docker.io/alpine:latest
          command: ["sh", "-c", "chown -R 100:101 /var/www/html/storage/framework/sessions"]
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.snipeit.image.repository }}:{{ .Values.snipeit.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.snipeit.image.pullPolicy }}
          env:
            {{- if and .Values.mariadb.enabled .Values.externalDB.enabled }}
            {{- fail "You have enabled BOTH .Values.mariadb.enabled and .Values.externalDB.enabled. That is wrong. Please choose one or the other." }}
            {{- end }}
            {{- if not (or .Values.mariadb.enabled .Values.externalDB.enabled) }}
            {{ fail "You need to enable exactly ONE of .Values.mariadb.enabled and .Values.externalDB.enabled so we know how to connect to the database." }}
            {{- end }}
            {{- if .Values.mariadb.enabled }}
            - name: DB_USERNAME 
              value: "{{ .Values.mariadb.auth.username }}"
            - name: DB_PASSWORD 
              value: "{{ .Values.mariadb.auth.password }}"
            - name: DB_DATABASE 
              value: "{{ .Values.mariadb.auth.database }}"
            - name: DB_HOST 
              value: "{{ .Release.Name }}-mariadb"
            {{- else if .Values.externalDB.enabled }}
            - name: DB_USERNAME
              {{- .Values.externalDB.username | toYaml | nindent 14 }}
            - name: DB_PASSWORD
              {{- .Values.externalDB.password | toYaml | nindent 14 }}
            - name: DB_DATABASE
              {{- .Values.externalDB.database | toYaml | nindent 14 }}
            - name: DB_HOST
              {{- .Values.externalDB.host | toYaml | nindent 14 }}
            {{- end }}
            - name: APP_KEY 
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.snipeit.config.appKey.name }}"
                  key: APP_KEY
            - name: APP_ENV
              value: "{{ .Values.snipeit.config.env }}"
            - name: APP_DEBUG
              value: "{{ .Values.snipeit.config.debug }}"
            - name: APP_URL
              value: "{{ .Values.snipeit.config.url }}"
            - name: APP_TIMEZONE
              value: "{{ .Values.snipeit.config.timezone }}"
            - name: APP_LOCALE
              value: "{{ .Values.snipeit.config.locale }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: snipeit-data
        labels:
          {{- include "snipeit.selectorLabels" . | nindent 10 }}
      spec:
        accessModes:
          - {{ .Values.snipeit.persistence.accessMode }}
        storageClassName: {{ .Values.snipeit.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.snipeit.persistence.size }}
